//
//  HWStatusFrame.swift
//  4jÊàêÊâç-ÂæÆÂçö
//
//  Created bY:CGFloat ËíãËøõ on 15/11/29.
//  Copyright ¬© 2015Âπ¥ sijichcai. All rights reserved.
//

import UIKit
//  ‰∏Ä‰∏™HWStatusFrameÊ®°ÂûãÈáåÈù¢ÂåÖÂê´ÁöÑ‰ø°ÊÅØ
//  1.Â≠òÊîæÁùÄ‰∏Ä‰∏™cellÂÜÖÈÉ®ÊâÄÊúâÂ≠êÊéß‰ª∂ÁöÑframeÊï∞ÊçÆ
//  2.Â≠òÊîæ‰∏Ä‰∏™cellÁöÑÈ´òÂ∫¶
//  3.Â≠òÊîæÁùÄ‰∏Ä‰∏™Êï∞ÊçÆÊ®°ÂûãHWStatus

class HWStatusFrame: NSObject {
    
    
    // cellÁöÑËæπÊ°ÜÂÆΩÂ∫¶
    let HWStatusCellBorderW:CGFloat = 10
    // ÊòµÁß∞Â≠ó‰Ωì
    let HWStatusCellNameFont = UIFont.systemFontOfSize(15)
    // Êó∂Èó¥Â≠ó‰Ωì
    let HWStatusCellTimeFont = UIFont.systemFontOfSize(12)
    // Êù•Ê∫êÂ≠ó‰Ωì
    let HWStatusCellSourceFont = UIFont.systemFontOfSize(12)
    // Ê≠£ÊñáÂ≠ó‰Ωì
    let HWStatusCellContentFont = UIFont.systemFontOfSize(14)
    
    /** ÂéüÂàõÂæÆÂçöÊï¥‰Ωì */
    var originalViewF:CGRect?
    /** Â§¥ÂÉè */
    var iconViewF:CGRect?
    /** ‰ºöÂëòÂõæÊ†á */
    var vipViewF:CGRect?
    /** ÈÖçÂõæ */
    var photoViewF:CGRect?
    /** ÊòµÁß∞ */
    var nameLabelF:CGRect?
    /** Êó∂Èó¥ */
    var timeLabelF:CGRect?
    /** Êù•Ê∫ê */
    var sourceLabelF:CGRect?
    /** Ê≠£Êñá */
    var contentLabelF:CGRect?
    
    /** cellÁöÑÈ´òÂ∫¶ */
    var  cellHeight:CGFloat?
    
    
    
    
    
    
    //MARK: üíóÊ†πÊçÆÂ≠ó‰ΩìËÆæÁΩÆÈ´òÂ∫¶
     func sizeWithText(text: String?, font: UIFont, maxSize: CGSize) -> CGSize{
        if text != nil  {
            
            let attrs: Dictionary = [NSFontAttributeName: font]
            
            let rect = text!.boundingRectWithSize(maxSize, options:NSStringDrawingOptions.UsesLineFragmentOrigin, attributes: attrs, context: nil)
            
            return rect.size;
            
        }
        return CGSizeZero;
    }

    
    
    
    var status:HWStatus?{
        
        didSet{
            
            let user = status!.user! as HWUser
            
            // cellÁöÑÂÆΩÂ∫¶
            let cellW:CGFloat = UIScreen.mainScreen().bounds.size.width;
            
            /* ÂéüÂàõÂæÆÂçö */
            
            /** Â§¥ÂÉè */
            let iconWH:CGFloat = 35;
            let iconX:CGFloat = HWStatusCellBorderW;
            let iconY:CGFloat = HWStatusCellBorderW;
            self.iconViewF = CGRectMake(iconX, iconY, iconWH, iconWH);

            /** ÊòµÁß∞ */
            let nameX:CGFloat = CGRectGetMaxX(self.iconViewF!) + HWStatusCellBorderW;
            let nameY:CGFloat = iconY;
            let nameSize: CGSize = self.sizeWithText(user.name as String, font: HWStatusCellNameFont, maxSize:CGSizeMake(CGFloat.max, CGFloat.max) )
            
            self.nameLabelF = CGRectMake(nameX, nameY, nameSize.width, nameSize.height)
    
            /** ‰ºöÂëòÂõæÊ†á */
            
            if user.isVip == true {
                let vipX:CGFloat = CGRectGetMaxX(self.nameLabelF!) + HWStatusCellBorderW;
                let vipY:CGFloat = nameY;
                let vipH:CGFloat = nameSize.height;
                let vipW:CGFloat = 14;
                self.vipViewF = CGRectMake(vipX, vipY, vipW, vipH);
            }
            
            /** Êó∂Èó¥ */
            let timeX:CGFloat = nameX;
            let timeY:CGFloat = CGRectGetMaxY(self.nameLabelF!) + HWStatusCellBorderW;
            let timeSize:CGSize = self.sizeWithText(user.name as String, font: HWStatusCellNameFont, maxSize:CGSizeMake(CGFloat.max, CGFloat.max) )
            self.timeLabelF = CGRectMake(timeX, timeY,timeSize.width, timeSize.height)
            
            /** Êù•Ê∫ê */
            let sourceX:CGFloat = CGRectGetMaxX(self.timeLabelF!) + HWStatusCellBorderW;
            let sourceY:CGFloat = timeY;
            let sourceSize: CGSize = self.sizeWithText(user.name as String, font: HWStatusCellSourceFont, maxSize:CGSizeMake(CGFloat.max, CGFloat.max) )
  
            self.sourceLabelF = CGRectMake(sourceX, sourceY,sourceSize.width, sourceSize.height)
  
            
            /** Ê≠£Êñá */
            let contentX:CGFloat = iconX;
            let contentY:CGFloat = max(CGRectGetMaxY(self.iconViewF!), CGRectGetMaxY(self.timeLabelF!)) + HWStatusCellBorderW
          
            let maxW:CGFloat = cellW - 2 * contentX
            let contentSize:CGSize = self.sizeWithText(status!.text as? String, font: HWStatusCellContentFont, maxSize:CGSizeMake(maxW, CGFloat.max) )

            self.contentLabelF = CGRectMake(contentX, contentY,contentSize.width, contentSize.height)
            
            
            /** ÈÖçÂõæ */
            
            /** ÂéüÂàõÂæÆÂçöÊï¥‰Ωì */
            let originalX:CGFloat = 0;
            let originalY:CGFloat = 0;
            let originalW:CGFloat = cellW;
            let originalH:CGFloat = CGRectGetMaxY(self.contentLabelF!) + HWStatusCellBorderW;
            self.originalViewF = CGRectMake(originalX, originalY, originalW, originalH);
            
            
            self.cellHeight = CGRectGetMaxY(self.originalViewF!);
        }

            
        }
        
    }
    
    
    
    

